/*
    This file represents the default configuration for a heedy server.

    You can override any of these options in your server's heedy.conf, or in 
    you plugin's configuration file.

*/


// By default, listen on all interfaces
host=""
// The port on which to run heedy
port = 1324
// The default heedy port is https-only. There is the option of using an http port by setting it here.
// Setting to 0 or -1 disables http
http_port = 8080

// When CORS is set to true, cross-origin requests are permitted. This allows javascript from other websites to 
// access heedy, which is needed to allow viewing data from public streams on websites.
cors = true

// These define the default language for heedy. Note that the fallback language must be a 
// fully supported language - to be sure, only use built-in languages as fallbacks.
language = "en"
fallback_language = "en"

// The SQL connection string to use to connect to the database. It is in the form:
//  <sql type>://<connection string>
// By default, heedy uses an sqlite3 database within the db subfolder of the main config.
sql = "sqlite3://db/heedy.db?_journal=WAL"

// frontend contains the settings for the main web UI
frontend {
    // The routes that the app has for a logged in user. They all point to javascript
    // module files containing vue components that are loaded when the route is visited
    routes = {
        "/" = "js/user.mjs"
    }

    // The main menu to show a logged in user. The keys are just ids, to allow modification
    // from plugins/the main config
    menu = {
        "home": {
            route = "/"
            icon = "mi:home"
            text = "Home"
            description = "Go to the homepage"
            active = true
        }
    }

    // The routes that the app has for a visitor (ie: not logged in)
    public_routes = {
        "/" = "heedy/user.mjs"
        "/login" = "heedy/login.mjs"
        "/loading" = "heedy/loading.mjs"
    }
    public_menu = {
        
        "home": {
            route = "/"
            icon = "mi:home"
            text = "Home"
            description = "Not logged in homepage"
            active = true
        },
        "shared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        }
        
        /*,
        "stybhared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharedbrtbu": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shryuared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharejrd": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shacqwred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharsdfed": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shaqerred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shahwred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shaerred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shasdgfred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharecxd": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharued": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shlared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharhed": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shafred": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sharehd": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "shfared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "sshared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        },
        "ashared": {
            route = "/shared"
            icon = "fa:fas fa-users"
            text = "Shared"
            description = "Explore public and shared streams"
            active = true
        }*/
    }

    
}

// The number of bytes to allow in a REST request body. This does not apply to datapoint inserts,
// which are allowed to be of arbitrary size
request_body_byte_limit = 2e+6

// This disallows certain group names to exist. You can forbid a username by simply disallowing its group,
// or a device name by giving /devicename - internal group names are auto-generated UUIDs.. this requires more thought
// NOTE: I dont think that groups will work like this - it iwll have to be explicit username restriction
//forbidden_groups = ["test"]
